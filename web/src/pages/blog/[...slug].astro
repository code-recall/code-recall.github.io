---
import Tags from '@/components/Tags.astro'
import BaseLayout from '@/layouts/BaseLayout.astro'
import BlogPostLayout from '@/layouts/BlogPostLayout.astro'
import type { GetStaticPaths } from 'astro'
import type { CollectionEntry } from 'astro:content'
import { getCollection } from 'astro:content'

interface Props {
  post: Awaited<CollectionEntry<'blog'>>
}

export const getStaticPaths = (async () => {
  const posts = await getCollection('blog')

  return posts.map((post) => ({
    params: { slug: post.slug.split('/').at(1) },
    props: { post },
  }))
}) satisfies GetStaticPaths

const { post } = Astro.props
const { Content } = await post.render()
const pubDate = post.data.pubDate.toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'short',
  day: 'numeric',
})
---

<BaseLayout title={post.data.title} description={post.data.description}>
  <div class="post-details flow">
    <h1>{post.data.title}</h1>

    <div class="post-meta">
      <div class="post-authorship">
        <p>{post.data.author}</p>
        <time>{pubDate}</time>
      </div>
      <Tags tags={post.data.tags} />
    </div>

    <p>{post.data.description}</p>
  </div>

  <BlogPostLayout>
    <Content />
  </BlogPostLayout>
</BaseLayout>

<style>
  .post-details {
    margin-bottom: var(--space-2xl);
  }

  .post-meta {
    display: flex;
    gap: var(--space-xs);
    justify-content: space-between;
    align-items: center;
  }

  .post-authorship {
    display: inline-flex;
    align-items: center;
    gap: var(--space-xs);

    & p {
      font-weight: bold;
      margin: 0;
      font-size: var(--step--1);
    }

    & time {
      color: darkgray;
      font-size: var(--step--1);
    }
  }
</style>
